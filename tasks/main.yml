---
- name: Ensure Required Items
  fail: 
    msg: "Please ensure '{{ item }}' is set"
  when:
    - not item is defined or item == ""
  with_items:
    - flags

- name: Ensure OpenSSL is installed
  apt: 
    name: openssl 
    state: present
  when: ansible_os_family is defined and ansible_os_family == "Debian"

- name: Ensure remote path exists
  file: 
    path: '{{ base_paths.remote }}' 
    state: directory 
    owner: '{{ perms.owner }}' 
    group: '{{ perms.group }}' 
    mode: '{{ perms.mode }}'
  become: true
  when: ((['create_csr', 'deploy'] | intersect(flags)) | length > 0) and (inventory_hostname != 'localhost')

#
# Check which local files exist
#
- name: Get stats for cert_path.csr.local -- {{ cert_path.csr.local }}
  stat: 
    path: '{{ cert_path.csr.local }}'
  connection: local
  register: stat_csr_local
  become: false

- name: Get stats for cert_path.key.local -- {{ cert_path.key.local }}
  stat: 
    path: '{{ cert_path.key.local }}'
  connection: local
  register: stat_key_local
  become: false

- name: Get stats for cert_path.csr.remote -- {{ cert_path.csr.remote }}
  stat: 
    path: '{{ cert_path.csr.remote }}'
  register: stat_csr_remote
  become: true
  when: inventory_hostname != 'localhost'

#
# Create a CSR on the server if it does not exist, and user wants to generate one
#

- name: Determine if remote is needed based on stats
  set_fact:
    need_remote: "{{ stat_csr_remote.stat.exists == false }}"
  when: inventory_hostname != 'localhost'

- name: No need for remove when using local
  set_fact:
    need_remote: false
  when: inventory_hostname == 'localhost'

- name: Determine if local is needed based on stats
  set_fact:
    need_local: "{{ stat_csr_local.stat.exists == false }}"

- name: Determine other needs
  set_fact:
    need_generate: "{{ need_remote == true or need_local == true or force == true }}"
    need_pull: "{{ need_local == true or force == true }}"

- name: Generate CSR
  include_tasks: generate-csr.yml
  when:
    - ((['create_csr'] | intersect(flags)) | length > 0)
    - need_generate == true

- name: Pull CSR
  include_tasks: pull-csr.yml
  when: >
    ((['create_csr', 'pull_csr'] | intersect(flags)) | length > 0) and
    ( inventory_hostname != 'localhost' ) and
    ( need_pull == true )

- name: Deploy Certificates
  include_tasks: deploy.yml
  when: ((['deploy'] | intersect(flags)) | length > 0)
