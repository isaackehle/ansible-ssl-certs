---
- name: Ensure Required Items
  fail:
    msg: "Please ensure '{{ item }}' is set"
  when:
    - not item is defined or item | length == 0
  with_items:
    - flags

- name: Ensure OpenSSL is installed
  apt:
    name: openssl
    state: present
  when: ansible_os_family is defined and ansible_os_family == "Debian"

- name: Ensure remote path exists
  file:
    path: "{{ base_paths.remote }}"
    state: directory
    owner: "{{ perms.owner }}"
    group: "{{ perms.group }}"
    mode: "{{ perms.mode }}"
  become: true
  when: ((['create_csr', 'deploy'] | intersect(flags)) | length > 0) and (inventory_hostname != 'localhost')

- name: Get stats for cert_path.csr -- {{ cert_path.csr }}
  stat:
    path: "{{ cert_path.csr }}"
  delegate_to: localhost
  register: stat_csr
  become: false

- name: Get stats for cert_path.key.local -- {{ cert_path.key.local }}
  stat:
    path: "{{ cert_path.key.local }}"
  delegate_to: localhost
  register: stat_key_local
  become: false

- name: Determine if remote is needed based on stats
  set_fact:
    need_remote: "{{ not stat_csr.stat.exists }}"
  when: inventory_hostname != 'localhost'

- name: No need for remove when using local
  set_fact:
    need_remote: false
  when: inventory_hostname == 'localhost'

- name: Determine if local is needed based on stats
  set_fact:
    need_local: "{{ not stat_csr.stat.exists }}"

- name: Determine other needs
  set_fact:
    need_generate: "{{ need_remote or need_local or force }}"
    # need_pull: "{{ need_local or force }}"

- name: Generate CSR
  include_tasks: generate-csr.yml
  when:
    - ((['create_csr'] | intersect(flags)) | length > 0)
    - need_generate

# - name: Pull CSR
#   include_tasks: pull-csr.yml
#   when: >
#     ((['create_csr', 'pull_csr'] | intersect(flags)) | length > 0) and
#     ( inventory_hostname != 'localhost' ) and
#     ( need_pull )

- name: Deploy Certificates
  include_tasks: deploy.yml
  when: ((['deploy'] | intersect(flags)) | length > 0)
