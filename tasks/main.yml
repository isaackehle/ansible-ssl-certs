---
- fail: msg="Please ensure '{{ item }}' is set"
  when:
    - not item is defined or item == ""
  with_items:
    - certs_path
    - flags

#- debug: var=ca_name
#- debug: var=flags

- set_fact:
    sc_local_cert_path: "{{ certs_path }}/{{ sc_common_name }}"

- include: ./set_path.{{ca_name}}.yml

- name: Ensure OpenSSL is installed
  apt: name=openssl state=present
  when: ansible_os_family is defined and ansible_os_family == "Debian"

- name: Ensure sc_deploy_path exists
  file: path={{ sc_deploy_path }} state=directory owner={{ sc_owner }} group={{ sc_group }} mode={{ sc_deploy_mode }}
  become: yes
  when: ((['csr_create', 'deploy'] | intersect(flags)) | length > 0) and (ansible_host != 'localhost')

#
# Check which local files exist
#
- stat: path={{ sc_csr_local }}
  connection: local
  register: stat_csr_local
  become: false

- stat: path={{ sc_key_local }}
  connection: local
  register: stat_key_local
  become: false

#
# Enable client configuration for OpenSSL, if requested
#
- include: handle-client-config.yml
  when: ((['client_config'] | intersect(flags)) | length > 0)

#
# Create a CSR on the server if it does not exist, and user wants to generate one
#
- stat: path={{ sc_csr_remote }}
  register: stat_csr_remote
  become: true
  when: ((['csr_create'] | intersect(flags)) | length > 0) and ansible_host != 'localhost'

#- debug: var=stat_csr_remote
#- debug: var=stat_csr_local

- include: generate-csr.yml
  when: >
    ((['csr_create', 'deploy'] | intersect(flags)) | length > 0) and
    ( stat_csr_remote is defined and stat_csr_remote.stat is defined and
      not stat_csr_remote.stat.exists or
      not stat_csr_local.stat.exists or
      ((['force'] | intersect(flags)) | length > 0)
    )

#
# Copy the CSR to local private storage if it does not exist.  This will be supplied to the CA.
#

- include: pull-csr.yml
  when: >
    ((['csr_create', 'csr_pull'] | intersect(flags)) | length > 0) and
    ( ansible_host != 'localhost' ) and
    ( not stat_csr_local.stat.exists or not stat_key_local.stat.exists or force|bool == true)

#
# This section tests whether the user wants to generate the Self-Signed Certificate
#

#
# Deploy
#
- include: deploy.yml
  when: ((['deploy'] | intersect(flags)) | length > 0)
